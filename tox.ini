[tox]
envlist = {py37,py38,py39}-test,cov
minversion = 3.11.1
skipdist = True
usedevelop = True
setenv = VIRTUAL_ENV={envdir}
passenv = *_proxy
          *_PROXY
          CI
install_command = pip install {opts} {packages}

[testenv]
deps =
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/requirements/tests.txt
whitelist_externals = bash
                      find
                      mkdir
setenv=
    py{37,38,39}: COVERAGE_FILE={toxinidir}/.coverage.{envname}
commands_pre =
  find ./ -type f -name '*.pyc' -delete
commands =
  mkdir -p {toxinidir}/test-reports

  py{37,38,39}: coverage erase
  py{37,38,39}: pytest --junitxml=test-reports/junit.{envname}.xml --cov=axion {posargs}

  cov: coverage combine
  cov: coverage xml
  cov: coverage html

[testenv:py39-test]
ignore_outcome = true

[testenv:yapf]
description = Checks code formatting with yapf
skip_install = True
usedevelop = False
deps =
  -r{toxinidir}/requirements/yapf.txt
commands =
  yapf --diff --recursive \
    {toxinidir}/axion \
    {toxinidir}/tests \
    {toxinidir}/typesafety \
    {toxinidir}/setup.py

[testenv:flake8]
description = Validates codebase with flake
skip_install = True
usedevelop = False
deps =
  -r{toxinidir}/requirements/flake8.txt
commands =
  flake8 --config {toxinidir}/.flake8 \
    {toxinidir}/axion \
    {toxinidir}/tests \
    {toxinidir}/typesafety \
    {toxinidir}/setup.py

[testenv:mypy]
description = Validates codebase with flake
skip_install = True
usedevelop = False
deps =
  -r{toxinidir}/requirements/mypy.txt
commands_pre =
    mkdir -p {toxinidir}/typingcov
commands =
  mypy \
    --html-report typingcov \
    --config-file {toxinidir}/mypy.ini \
    --no-incremental \
    {toxinidir}/axion \
    {toxinidir}/tests \
    {toxinidir}/typesafety \
    {toxinidir}/setup.py

[testenv:mypy_examples]
description = Validates axion examples against oas_mypy plugin
skip_install = False
usedevelop = True
deps =
  -r{toxinidir}/requirements/mypy.txt
changedir = examples/
commands =
  mypy --strict --config-file ./mypy.ini \
    -p petstore

[testenv:safety]
description = Checks dependencies against SafetyDB
skip_install = True
usedevelop = False
deps =
  -r{toxinidir}/requirements/safety.txt
commands =
  safety check -r {toxinidir}/requirements.txt
